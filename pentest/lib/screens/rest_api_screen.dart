/*
 * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 *  http://aws.amazon.com/apache2.0
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

import 'package:amplify_flutter/amplify_flutter.dart';
import 'package:flutter/material.dart';
import 'package:go_router/go_router.dart';

class RestApiScreen extends StatefulWidget {
  const RestApiScreen({Key? key}) : super(key: key);

  @override
  State<RestApiScreen> createState() => _RestApiScreenState();
}

class _RestApiScreenState extends State<RestApiScreen> {
  late TextEditingController _apiPathController;
  late CancelableOperation _lastRestOperation;
  String? _result;

  @override
  void initState() {
    super.initState();

    _apiPathController = TextEditingController();
    _apiPathController.text = '/items';
  }

  void onPutPressed() async {
    try {
      final restOperation = Amplify.API.put(
        _apiPathController.text,
        body: HttpPayload.json({'name': 'Mow the lawn'}),
      );

      _lastRestOperation = restOperation.operation;
      final response = await restOperation.response;

      print('Put SUCCESS');
      print(response.decodeBody());
      setState(() {
        _result = response.decodeBody();
      });
    } on Exception catch (e) {
      print('Put FAILED');
      print(e);
    }
  }

  void onPostPressed() async {
    try {
      final restOperation = Amplify.API.post(
        _apiPathController.text,
        body: HttpPayload.json({'name': 'Mow the lawn'}),
      );

      _lastRestOperation = restOperation.operation;
      final response = await restOperation.response;

      print('Post SUCCESS');
      print(response.decodeBody());
      setState(() {
        _result = response.decodeBody();
      });
    } on Exception catch (e) {
      print('Post FAILED');
      print(e);
    }
  }

  void onGetPressed() async {
    try {
      final restOperation = Amplify.API.get(
        _apiPathController.text,
      );

      _lastRestOperation = restOperation.operation;
      final response = await restOperation.response;

      print('Get SUCCESS');
      print(response.decodeBody());
      setState(() {
        _result = response.decodeBody();
      });
    } on ApiException catch (e) {
      print('Get FAILED');
      print(e.toString());
    }
  }

  void onDeletePressed() async {
    try {
      final restOperation = Amplify.API.delete(
        _apiPathController.text,
      );
      _lastRestOperation = restOperation.operation;
      final response = await restOperation.response;

      print('Delete SUCCESS');
      print(response.decodeBody());
      setState(() {
        _result = response.decodeBody();
      });
    } on Exception catch (e) {
      print('Delete FAILED');
      print(e);
    }
  }

  void onCancelPressed() async {
    try {
      _lastRestOperation.cancel();
    } on Exception catch (e) {
      print('Cancel FAILED');
      print(e.toString());
    }
  }

  void onHeadPressed() async {
    try {
      final restOperation = Amplify.API.head(
        _apiPathController.text,
      );

      _lastRestOperation = restOperation.operation;
      await restOperation.response;

      print('Head SUCCESS');
    } on ApiException catch (e) {
      print('Head FAILED');
      print(e.toString());
    }
  }

  void onPatchPressed() async {
    try {
      final restOperation = Amplify.API.patch(
        _apiPathController.text,
        body: HttpPayload.json({'name': 'Mow the lawn'}),
      );

      _lastRestOperation = restOperation.operation;
      final response = await restOperation.response;

      print('Patch SUCCESS');
      print(response.decodeBody());
      setState(() {
        _result = response.decodeBody();
      });
    } on ApiException catch (e) {
      print('Patch FAILED');
      print(e.toString());
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
          leading: BackButton(onPressed: () => context.push('/')),
          title: const Text('REST API (API Gateway) Example'),
        ),
        body: ListView(padding: const EdgeInsets.all(10.0), children: [
          TextField(
            controller: _apiPathController,
            decoration: const InputDecoration(
              border: OutlineInputBorder(),
              labelText: 'apiPath',
            ),
          ),
          Center(
              child: ElevatedButton(
            onPressed: onPostPressed,
            child: const Text('Post'),
          )),
          Center(
              child: ElevatedButton(
            onPressed: onPutPressed,
            child: const Text('Put'),
          )),
          Center(
              child: ElevatedButton(
            onPressed: onGetPressed,
            child: const Text('Get'),
          )),
          Center(
              child: ElevatedButton(
            onPressed: onCancelPressed,
            child: const Text('Cancel'),
          )),
          Center(
              child: ElevatedButton(
            onPressed: onDeletePressed,
            child: const Text('Delete'),
          )),
          Center(
              child: ElevatedButton(
            onPressed: onHeadPressed,
            child: const Text('Head'),
          )),
          Center(
              child: ElevatedButton(
                  onPressed: onPatchPressed, child: const Text('Patch'))),
          const Padding(padding: EdgeInsets.all(5.0)),
          const Text(
            'Result:',
          ),
          Text(
            _result ?? '',
          ),
        ]));
  }
}
