import 'package:flutter/material.dart';
import 'dart:io';
import 'package:file_picker/file_picker.dart';
import 'package:amplify_flutter/amplify_flutter.dart';
import 'package:go_router/go_router.dart';

class StorageScreen extends StatefulWidget {
  const StorageScreen({Key? key, this.isAmplifyConfigured = true})
      : super(key: key);

  final bool isAmplifyConfigured;

  @override
  State<StorageScreen> createState() => _StorageState();
}

class _StorageState extends State<StorageScreen> {
  String _uploadFileResult = '';
  String _getUrlResult = '';
  String _removeResult = '';

  @override
  void initState() {
    super.initState();
  }

  void upload() async {
    try {
      print('In upload');
      // Uploading the file with options
      FilePickerResult? pickResult =
          await FilePicker.platform.pickFiles(type: FileType.image);
      if (pickResult == null) {
        print('User canceled upload.');
        return;
      }
      File local = File(pickResult.files.single.path!);
      final key = new DateTime.now().toString();
      Map<String, String> metadata = <String, String>{};
      metadata['name'] = 'filename';
      metadata['desc'] = 'A test file';
      // S3UploadFileOptions options = S3UploadFileOptions(
      //     accessLevel: StorageAccessLevel.guest, metadata: metadata);

      // UploadFileResult result = await Amplify.Storage.uploadFile(
      //     key: key,
      //     local: local,
      //     options: options,
      //     onProgress: (progress) {
      //       print("PROGRESS: " + progress.getFractionCompleted().toString());
      //     });

      // setState(() {
      //   _uploadFileResult = result.key;
      // });
    } catch (e) {
      print('UploadFile Err: ' + e.toString());
    }
  }

  void getUrl() async {
    // try {
    //   print('In getUrl');
    //   String key = _uploadFileResult;
    //   S3GetUrlOptions options = S3GetUrlOptions(
    //       accessLevel: StorageAccessLevel.guest, expires: 10000);
    //   GetUrlResult result =
    //       await Amplify.Storage.getUrl(key: key, options: options);

    //   setState(() {
    //     _getUrlResult = result.url;
    //   });
    // } catch (e) {
    //   print('GetUrl Err: ' + e.toString());
    // }
  }

  void remove() async {
    // try {
    //   print('In remove');
    //   String key = _uploadFileResult;
    //   RemoveOptions options =
    //       RemoveOptions(accessLevel: StorageAccessLevel.guest);
    //   RemoveResult result =
    //       await Amplify.Storage.remove(key: key, options: options);

    //   setState(() {
    //     _removeResult = result.key;
    //   });
    //   print('_removeResult:' + _removeResult);
    // } catch (e) {
    //   print('Remove Err: ' + e.toString());
    // }
  }

  void list() async {
    try {
      print('In list');
      final result = await Amplify.Storage.list().result;
      print('List Result:');
      for (StorageItem item in result.items) {
        print(
            'Item: { key:${item.key}, eTag:${item.eTag}, lastModified:${item.lastModified}, size:${item.size}');
      }
    } catch (e) {
      print('List Err: ' + e.toString());
    }
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          leading: BackButton(onPressed: () => context.push('/')),
          title: const Text('Storage S3 Plugin Example'),
        ),
        body: ListView(
          padding: EdgeInsets.all(10.0),
          children: <Widget>[
            Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: <Widget>[
                  ElevatedButton(
                    onPressed: upload,
                    child: const Text('Upload File'),
                  ),
                  const Padding(padding: EdgeInsets.all(5.0)),
                  Text('Uploaded File: $_uploadFileResult'),
                  const Padding(padding: EdgeInsets.all(5.0)),
                  ElevatedButton(
                    onPressed: remove,
                    child: const Text('Remove uploaded File'),
                  ),
                  const Padding(padding: EdgeInsets.all(5.0)),
                  Text('Removed File: $_removeResult'),
                  const Padding(padding: EdgeInsets.all(5.0)),
                  ElevatedButton(
                    onPressed: list,
                    child: const Text('List Files'),
                  ),
                  const Padding(padding: EdgeInsets.all(5.0)),
                  ElevatedButton(
                    onPressed: getUrl,
                    child: const Text('GetUrl for uploaded File'),
                  ),
                  const Padding(padding: EdgeInsets.all(5.0)),
                  Image.network(_getUrlResult),
                ])
          ],
        ),
      ),
    );
  }
}
